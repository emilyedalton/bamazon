'use strict';

function onScroll(handler, element) {
  var intermediateHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultIntermediateHandler;

  this.on('scroll', handler, element, intermediateHandler);
}

function offScroll(handler, element) {
  this.off('scroll', handler, element);
}

function getScrollTop() {
  return this.domElement.scrollTop;
}

function getScrollLeft() {
  return this.domElement.scrollLeft;
}

function setScrollTop(scrollTop) {
  this.domElement.scrollTop = scrollTop;
}

function setScrollLeft(scrollLeft) {
  this.domElement.scrollLeft = scrollLeft;
}

module.exports = {
  onScroll: onScroll,
  offScroll: offScroll,
  getScrollTop: getScrollTop,
  getScrollLeft: getScrollLeft,
  setScrollTop: setScrollTop,
  setScrollLeft: setScrollLeft
};

function defaultIntermediateHandler(handler, event, element) {
  var scrollTop = element.getScrollTop(),
      scrollLeft = element.getScrollLeft();

  handler.call(element, scrollTop, scrollLeft, event);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbnMvc2Nyb2xsLmpzIl0sIm5hbWVzIjpbIm9uU2Nyb2xsIiwiaGFuZGxlciIsImVsZW1lbnQiLCJpbnRlcm1lZGlhdGVIYW5kbGVyIiwiZGVmYXVsdEludGVybWVkaWF0ZUhhbmRsZXIiLCJvbiIsIm9mZlNjcm9sbCIsIm9mZiIsImdldFNjcm9sbFRvcCIsImRvbUVsZW1lbnQiLCJzY3JvbGxUb3AiLCJnZXRTY3JvbGxMZWZ0Iiwic2Nyb2xsTGVmdCIsInNldFNjcm9sbFRvcCIsInNldFNjcm9sbExlZnQiLCJtb2R1bGUiLCJleHBvcnRzIiwiZXZlbnQiLCJjYWxsIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxTQUFTQSxRQUFULENBQWtCQyxPQUFsQixFQUEyQkMsT0FBM0IsRUFBc0Y7QUFBQSxNQUFsREMsbUJBQWtELHVFQUE1QkMsMEJBQTRCOztBQUNwRixPQUFLQyxFQUFMLENBQVEsUUFBUixFQUFrQkosT0FBbEIsRUFBMkJDLE9BQTNCLEVBQW9DQyxtQkFBcEM7QUFDRDs7QUFFRCxTQUFTRyxTQUFULENBQW1CTCxPQUFuQixFQUE0QkMsT0FBNUIsRUFBcUM7QUFBRSxPQUFLSyxHQUFMLENBQVMsUUFBVCxFQUFtQk4sT0FBbkIsRUFBNEJDLE9BQTVCO0FBQXVDOztBQUU5RSxTQUFTTSxZQUFULEdBQXdCO0FBQUUsU0FBTyxLQUFLQyxVQUFMLENBQWdCQyxTQUF2QjtBQUFtQzs7QUFFN0QsU0FBU0MsYUFBVCxHQUF5QjtBQUFFLFNBQU8sS0FBS0YsVUFBTCxDQUFnQkcsVUFBdkI7QUFBb0M7O0FBRS9ELFNBQVNDLFlBQVQsQ0FBc0JILFNBQXRCLEVBQWlDO0FBQUUsT0FBS0QsVUFBTCxDQUFnQkMsU0FBaEIsR0FBNEJBLFNBQTVCO0FBQXdDOztBQUUzRSxTQUFTSSxhQUFULENBQXVCRixVQUF2QixFQUFtQztBQUFFLE9BQUtILFVBQUwsQ0FBZ0JHLFVBQWhCLEdBQTZCQSxVQUE3QjtBQUEwQzs7QUFFL0VHLE9BQU9DLE9BQVAsR0FBaUI7QUFDZmhCLG9CQURlO0FBRWZNLHNCQUZlO0FBR2ZFLDRCQUhlO0FBSWZHLDhCQUplO0FBS2ZFLDRCQUxlO0FBTWZDO0FBTmUsQ0FBakI7O0FBU0EsU0FBU1YsMEJBQVQsQ0FBb0NILE9BQXBDLEVBQTZDZ0IsS0FBN0MsRUFBb0RmLE9BQXBELEVBQTZEO0FBQzNELE1BQU1RLFlBQVlSLFFBQVFNLFlBQVIsRUFBbEI7QUFBQSxNQUNNSSxhQUFhVixRQUFRUyxhQUFSLEVBRG5COztBQUdBVixVQUFRaUIsSUFBUixDQUFhaEIsT0FBYixFQUFzQlEsU0FBdEIsRUFBaUNFLFVBQWpDLEVBQTZDSyxLQUE3QztBQUNEIiwiZmlsZSI6InNjcm9sbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gb25TY3JvbGwoaGFuZGxlciwgZWxlbWVudCwgaW50ZXJtZWRpYXRlSGFuZGxlciA9IGRlZmF1bHRJbnRlcm1lZGlhdGVIYW5kbGVyKSB7XG4gIHRoaXMub24oJ3Njcm9sbCcsIGhhbmRsZXIsIGVsZW1lbnQsIGludGVybWVkaWF0ZUhhbmRsZXIpO1xufVxuXG5mdW5jdGlvbiBvZmZTY3JvbGwoaGFuZGxlciwgZWxlbWVudCkgeyB0aGlzLm9mZignc2Nyb2xsJywgaGFuZGxlciwgZWxlbWVudCk7IH1cblxuZnVuY3Rpb24gZ2V0U2Nyb2xsVG9wKCkgeyByZXR1cm4gdGhpcy5kb21FbGVtZW50LnNjcm9sbFRvcDsgfVxuXG5mdW5jdGlvbiBnZXRTY3JvbGxMZWZ0KCkgeyByZXR1cm4gdGhpcy5kb21FbGVtZW50LnNjcm9sbExlZnQ7IH1cblxuZnVuY3Rpb24gc2V0U2Nyb2xsVG9wKHNjcm9sbFRvcCkgeyB0aGlzLmRvbUVsZW1lbnQuc2Nyb2xsVG9wID0gc2Nyb2xsVG9wOyB9XG5cbmZ1bmN0aW9uIHNldFNjcm9sbExlZnQoc2Nyb2xsTGVmdCkgeyB0aGlzLmRvbUVsZW1lbnQuc2Nyb2xsTGVmdCA9IHNjcm9sbExlZnQ7IH1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIG9uU2Nyb2xsLFxuICBvZmZTY3JvbGwsXG4gIGdldFNjcm9sbFRvcCxcbiAgZ2V0U2Nyb2xsTGVmdCxcbiAgc2V0U2Nyb2xsVG9wLFxuICBzZXRTY3JvbGxMZWZ0XG59O1xuXG5mdW5jdGlvbiBkZWZhdWx0SW50ZXJtZWRpYXRlSGFuZGxlcihoYW5kbGVyLCBldmVudCwgZWxlbWVudCkge1xuICBjb25zdCBzY3JvbGxUb3AgPSBlbGVtZW50LmdldFNjcm9sbFRvcCgpLFxuICAgICAgICBzY3JvbGxMZWZ0ID0gZWxlbWVudC5nZXRTY3JvbGxMZWZ0KCk7XG4gIFxuICBoYW5kbGVyLmNhbGwoZWxlbWVudCwgc2Nyb2xsVG9wLCBzY3JvbGxMZWZ0LCBldmVudCk7XG59XG4iXX0=